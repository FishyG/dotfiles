# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred file explorer
set $explorer thunar

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi --insensitive --show drun | xargs swaymsg exec --
#set $menu wofi --show drun
#include /etc/sway/config-vars.d/*

set $ssh_menu echo "kitty ssh $(cat ~/.ssh/config | grep "Host " | grep -v "#" | awk '{print $2}' | wofi -i --show dmenu)" | xargs swaymsg exec --

### Appearance

## Gaps around the windows
gaps inner 2
gaps outer 2

## For the windows
default_border normal
# class                 border      background  text        indicator   child_border
client.focused          #ff00ffdd   #a000a0dd   #ffffff     #ff0000     #cc55cc
client.focused_inactive #664466     #664466dd   #ffffff     #2e9ef4     #8f477a
client.unfocused        #440044     #220022dd   #888888     #292d2e     #220022

## swayfx specific
# # window corner radius in px
# corner_radius 13
# 
# # Window background blur
# blur on
# blur_xray on
# blur_passes 2
# blur_radius 10
# 
# shadows on
# shadows_on_csd off
# shadow_blur_radius 50
# shadow_color #0000007F
# 
# # inactive window fade amount. 0.0 = no dimming, 1.0 = fully dimmed
# default_dim_inactive 0.0
# dim_inactive_colors.unfocused #000000FF
# dim_inactive_colors.urgent #900000FF

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
# output * bg /usr/share/backgrounds/sway/Sway_Wallpaper_Blue_1920x1080.png fill
#

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 300 'swaylock -f -c 000000' \
#          timeout 600 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.



### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym $mod+Return exec $term

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+space exec $menu

    bindsym $mod+x exec $explorer
    bindsym $mod+backslash exec $explorer

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    bindsym $mod+Shift+e exec swaynag -t warning -m 'Bye bye? This will end your session.' -B 'Yes, exit sway' 'swaymsg exit'
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Workspaces' name
    set $ws1 "1"
    set $ws2 "2"
    set $ws3 "3"
    set $ws4 "4"
    set $ws5 "5"
    set $ws6 "6"
    set $ws7 "7"
    set $ws8 "8"
    set $ws9 "9"
    set $ws10 "10"

    # Set workspace on specific output
    #workspace $ws2 output HDMI-A-2
    #workspace $ws10 output HDMI-A-2

    # Go to prior workspace when repeating switch command
    #workspace_auto_back_and_forth yes

    # Switch to workspace
    bindsym $mod+1 workspace number $ws1
    bindsym $mod+2 workspace number $ws2
    bindsym $mod+3 workspace number $ws3
    bindsym $mod+4 workspace number $ws4
    bindsym $mod+5 workspace number $ws5
    bindsym $mod+6 workspace number $ws6
    bindsym $mod+7 workspace number $ws7
    bindsym $mod+8 workspace number $ws8
    bindsym $mod+9 workspace number $ws9
    bindsym $mod+0 workspace number $ws10

    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number $ws1
    bindsym $mod+Shift+2 move container to workspace number $ws2
    bindsym $mod+Shift+3 move container to workspace number $ws3
    bindsym $mod+Shift+4 move container to workspace number $ws4
    bindsym $mod+Shift+5 move container to workspace number $ws5
    bindsym $mod+Shift+6 move container to workspace number $ws6
    bindsym $mod+Shift+7 move container to workspace number $ws7
    bindsym $mod+Shift+8 move container to workspace number $ws8
    bindsym $mod+Shift+9 move container to workspace number $ws9
    bindsym $mod+Shift+0 move container to workspace number $ws10

    # Toggle workspaces
    bindsym $mod+grave workspace back_and_forth

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    #bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar {
    position top

    # When the status_command prints a new line to stdout, swaybar updates.
    # The default just shows the current date and time.
    status_command while ~/.config/sway/status.sh; do sleep 0.5; done

	# Original status_command
	#status_command while date +'Today is : %Y-%m-%d %I:%M:%S %p'; do sleep 1; done

    colors {
        statusline #ffffff
        background #000000bb
        active_workspace #32323233 #32323233 #ffffff
        inactive_workspace #32323233 #32323233 #ffffff
        focused_workspace #ff00ffff #880088ff #ffffff
    }
	font pango:VictorMono Nerd Font Medium Italic 10
}

# Window rules
# USE THIS: "swaymsg -t get_tree | jq -r"
    # Floating rules
        # Make MPLAB X IDE's loading windows floating
        for_window [class="java" instance="java" title="Loading..."] floating enable
        # Make MPLAB X IDE's confirmation windows floating
        for_window [class="java" instance="java" title="Confirmation"] floating enable
        # Make MPLAB Harmony's alert windows floating
        for_window [class="java" instance="java" title="Remove Module*"] floating enable

        #Make scrcpy start in scratchpad by default
        for_window [class="scrcpy" instance="scrcpy"] floating enable
        for_window [class="scrcpy" instance="scrcpy"] move scratchpad

        # Make KiCad's windows tabbed by default
        for_window [class="KiCad" instance="kicad"] layout tabbed

        # Make Okular's "New Text Note" window floating
        for_window [title="New Text Note - Okular"] floating enable
        # Misc rules
        #assign [app_id="firefox"] workspace number $ws2
        #assign [app_id="thunderbird"] workspace number $ws10

# Setup some more keybinds
    bindsym --locked XF86AudioRaiseVolume exec ~/scripts/audiocontrol.sh -v 5%+
    bindsym --locked XF86AudioLowerVolume exec ~/scripts/audiocontrol.sh -v 5%-
    bindsym --locked XF86AudioMute exec ~/scripts/audiocontrol.sh -m
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous

    # Show the clipboard history
    bindsym $mod+Shift+v exec cliphist list | wofi --dmenu | cliphist decode | wl-copy

    # Lock the screen
    bindsym $mod+Shift+Tab exec swaylock --image='/home/jessy/Pictures/wallpapers/water.jpg' --scaling fill --color 000000

    # Screenshot
    bindsym $mod+Shift+s exec grim -g "$(slurp -d)" - | wl-copy

    # Make a screen recording
    bindsym $mod+Shift+g exec pkill --euid "$USER" --signal SIGINT wf-recorder || bash -c 'wf-recorder -g "$(slurp)" -F fps=15 -f pipe:99 -m GIF -c gif 99>&1 >&2 | gifsicle -O3 --lossy=100 -o /tmp/yoink.gif && notify-send -t 10000 "Recording completed" && wl-copy -t image/png < /tmp/yoink.gif'

    # To mess with the opacity of the current window
    bindsym $mod+Shift+o exec swaymsg opacity plus 0.1
    bindsym $mod+o exec swaymsg opacity minus 0.1

    bindsym $mod+Shift_R exec $ssh_menu

include /etc/sway/config.d/*

# Load the config for the displays
include ~/.config/sway/outputs
include ~/.config/sway/wallpapers
include ~/.config/sway/workspaces

# Enable numlock by default
input type:keyboard {
    xkb_numlock enabled
    xkb_layout us,ca
    xkb_options grp:alt_caps_toggle
}
# Send notification when switching keyboard layout
exec ~/.config/sway/layout_notify.sh

# Auto start some applications

    # exec --no-startup-id thunderbird
    exec --no-startup-id firefox

    # exec xdg  desktop portal
    #exec --no-startup-id /usr/lib/xdg-desktop-portal -r

    # store text data in cliphist
    exec wl-paste --type text --watch cliphist store

    # store image data in cliphist
    exec wl-paste --type image --watch cliphist store

    # start copyq (not really needed, but cool to have)
    exec copyq --start-server

    # launch polkit authentication agent
    exec --no-startup-id lxpolkit

    # Start notification daemon
    exec mako

    # Little applet for the bluetooth
    # exec blueman-applet

    exec systemctl --user import-environment display wayland_display swaysock

    # To auto connect scrcpy when device is connected
    exec ~/git/autoadb/target/release/autoadb ~/.config/sway/launch_scrcpy.sh '{}'

    # lock sway after 300 sec then sleep after 600 seconds
    #exec swayidle -w \
    #	timeout 600 'swaylock -f -c 000000' \
    #	timeout 1000 'swaymsg "output * dpms off"' \
    #		resume 'swaymsg "output * dpms on"' \
    #	before-sleep 'swaylock -f -c 000000'
